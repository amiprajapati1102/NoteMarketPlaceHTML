@model NoteMarketPlaceHtml.Models.AdminProfileViewModel

@{
    ViewBag.Title = "AddAdmin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container form-wrap x-t-100">

    @using (Html.BeginForm("AddAdmin", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-heading">
            <h3>Add Admin</h3>
        </div>

        <div class="row">
            <div class="col-md-8">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

             
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.EmailID, ViewBag.Readonly == true ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.SecondaryEmailId, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SecondaryEmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SecondaryEmailId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-10">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " })


                    <div class="row">

                        <div class="col-md-3">
                            <div class="input-group"  >
                                @Html.DropDownListFor(model => model.SelectedCode, Model.CountryCode, "--Select Code--", new { @class = "form-control dropdown" })
                                @Html.ValidationMessageFor(model => model.SelectedCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-9" >
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.LabelFor(model => model.path, htmlAttributes: new { @class = "control-label " })


                        <div class="avatar-zone">

                            @Html.TextBoxFor(model => model.path, new { @class = "form-control upload_btn", type = "file" })
                            <p class="text-center" style="z-index:-2;"> Upload Picture</p>

                        </div>
                        @Html.ValidationMessageFor(model => model.SecondaryEmailId, "", new { @class = "text-danger" })

                    </div>

                    </div>

                @Html.ValidationMessage("Error", null, new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary x-b-60 x-t-30" id="submit-btn-user" value="AddAdmin">SUBMIT</button>

                    </div>
                </div>
            </div>
        </div>
    }

</div>